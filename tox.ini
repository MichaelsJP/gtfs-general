[tox]
envlist = lint-{py38,py39,py310},pytest-{local}-{py38,py39,py310}
isolated_build = true
minversion = "3"
basepython = python3.10

[testenv:pytest-{py38,py39,py310}]
basepython =
    py38: python3.8
    py39: python3.9
    py310: python3.10
commands =
    poetry install -v --no-interaction --no-root
    bash -c "export POSTGRES_USER=postgres && export POSTGRES_PASSWORD=dontchangeme && export POSTGRES_DB=debug_db && export POSTGRES_PORT=9432 && pytest -x -n auto --cov=src --cov-report=term-missing"
;docker =
;    docker: pytest_database
whitelist_externals = poetry
                      bash

[testenv:lint-{py38,py39,py310}]
basepython =
    py38: python3.8
    py39: python3.9
    py310: python3.10
commands =
    poetry install --no-interaction --no-root
    pre-commit run --all-files

whitelist_externals = poetry

[testenv:format]
commands =
    poetry install --no-interaction --no-root
    isort --force-single-line-imports src tests
    autoflake --remove-all-unused-imports --remove-unused-variables --exclude=__init__.py --in-place -r src/ tests/
    black src tests
    isort src tests
    pre-commit run --all-files
    flake8 --format=pylint --jobs=2 src tests

whitelist_externals = poetry

[docker:pytest_database]
image = postgis/postgis:12-3.1-alpine
environment :
    PGDATA=/var/lib/postgresql/data/pgdata
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=dontchangeme
    POSTGRES_DB=debug_db
    POSTGRES_PORT=5432
ports :
    9432:5432/tcp
# The healthcheck ensures that tox-docker won't run tests until the
# container is up and the command finishes with exit code 0 (success)
healthcheck_cmd = PGPASSWORD=$POSTGRES_PASSWORD psql \
                  --user=$POSTGRES_USER --dbname=$POSTGRES_DB \
                  --host=127.0.0.1 --quiet --no-align --tuples-only \
                  -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1
