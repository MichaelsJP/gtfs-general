name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry
      - name: Set up testing Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Load cached tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-lint-poetry-1.7.1-python-3.11-${{ hashFiles('**/poetry.lock') }}
      - name: Load cached pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run tox lint
        run: |
          poetry run tox -e lint-py310
  backend-tests:
    needs:
      - lint
    strategy:
      fail-fast: false
      matrix:
        config:
          - python-version: '3.9'
            tox: py39
          - python-version: '3.10'
            tox: py310
          - python-version: '3.11'
            tox: py311
          - python-version: '3.12'
            tox: py312
        poetry-version: [ 1.7.1 ]
        os: [ ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry
      - name: Set up testing Python ${{ matrix.config.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.config.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Load cached tox
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-${{ matrix.os }}-poetry-${{ matrix.poetry-version }}-python-${{ matrix.config.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Run tox
        run: |
          poetry run tox -e pytest-${{ matrix.config.tox }}
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          flags: unittests
#          env_vars: OS,PYTHON
#          name: codecov-umbrella
#          fail_ci_if_error: true
#          verbose: true
